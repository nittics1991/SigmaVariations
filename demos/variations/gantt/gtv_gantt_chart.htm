<!DOCTYPE html>
<html lang="ja">
<head>
    <meta http-equiv="Content-type" content="text/html; charset=UTF-8" />
	
	<!--moment-->
    <script type="text/javascript" src="../../../grid/moment/moment-with-locales.js"></script>
	
	<!--sigma variations/lib-->
    <script type="text/javascript" src="../../../src/lib/gtv_assert.js"></script>
    <script type="text/javascript" src="../../../src/lib/gtv_date.js"></script>
	
	<!--sigma variations/gantt/exception-->
    <script type="text/javascript" src="../../../src/gantt/exception/gtv_gantt_error_invalidargument.js"></script>
	
	<!--sigma variations/gantt-->
    <script type="text/javascript" src="../../../src/gantt/gtv_gantt_data.js"></script>
    <script type="text/javascript" src="../../../src/gantt/gtv_gantt_data_collection.js"></script>
    <script type="text/javascript" src="../../../src/gantt/gtv_gantt_chart.js"></script>
	
	<!--sigma-->
	<script type="text/javascript" src="../../../src/gt_const.js"></script>
	<script type="text/javascript" src="../../../src/gt_base.js"></script>
	<script type="text/javascript" src="../../../src/gt_tool.js"></script>
	<script type="text/javascript" src="../../../src/gt_editor.js"></script>
	<script type="text/javascript" src="../../../src/gt_dialog.js"></script>
	<script type="text/javascript" src="../../../src/gt_grid.js"></script>
	<script type="text/javascript" src="../../../src/gt_ajax.js"></script>
	<script type="text/javascript" src="../../../src/gt_column.js"></script>
	<script type="text/javascript" src="../../../src/gt_dataset.js"></script>
	<script type="text/javascript" src="../../../src/gt_template.js"></script>
	<script type="text/javascript" src="../../../src/gt_validator.js"></script>	
 	
<title></title>
</head>
<body>

<h4>テスト</h4>
<ol>
	<li>consoleでassert確認</li>
</ol>

<div id="mocha"></div>

<script>

var obj;
var expect;

console.log('===test');

expect = {
	type:'day',
	startDate:null,
	endDate:null,
	headerFormatDay:'YYYY-MM-DD',
	headerFormatWeek:'YYYY-MM-B',
	headerFormatMonth:'YYYY-MM',
	maxColumnCount:36,
	progressLineColor:'#ff0000',
	eventClick:null,
	eventMouseover:null,
	eventMouseout:null,
};

obj = new Sigma.Gantt.Chart();
Sigma.Assert.eqObj(expect, obj.toObject(), "null toObject");

expect = {
	type:'day',
	startDate:'2018-01-23',
	endDate:'2018-03-23',
	headerFormatDay:'YYYY/MM/DD',
	headerFormatWeek:'YYYY/MM/B',
	headerFormatMonth:'YYYY/MM',
	maxColumnCount:30,
	progressLineColor:'#ff0000',
	eventClick:null,
	eventMouseover:null,
	eventMouseout:null,
};

obj = new Sigma.Gantt.Chart(expect);
Sigma.Assert.eqObj(expect, obj.toObject(), "set data toObject");
Sigma.Assert.eq(
	'2018/01/23',
	obj.toDateFormat('2018-01-23'),
	"format day"
);

obj.type = 'week';
Sigma.Assert.eq(
	'2018/01/4',
	obj.toDateFormat('2018-01-23'),
	"format week"
);

obj.type = 'month';
Sigma.Assert.eq(
	'2018/01',
	obj.toDateFormat('2018-01-23'),
	"format month"
);

console.log('===startDate');

var data = [
	{
		no:1,
		user:'yamada',
		section:'design-1',
		startDay:'2018-01-23',
		endDay:'2018-02-01',
		task:'model design',
		chart:[
			{
				id:10,
				start:'2018-02-05',
				end:'2018-02-28',
				type:'bar',
				progress:50,
				format:'YYYY-MM-DD',
			},
			{
				id:101,
				start:'2018-02-01',
				end:'2018-02-10',
				type:'stone',
				progress:100,
				//format:'YYYY-MM-DD',
				text:'TITLE',
				className:'my-class',
				textColor:'#ff0000',
				borderColor:'#00FF00',
				backgroundColor:'#1290aA',
				progressColor:'#0000FF',
			},
		],
	},	
	{
		no:2,
		user:'okada',
		section:'design-2',
		startDay:'2018-02-01',
		endDay:'2018-02-28',
		task:'view design',
		chart:[
			{
				id:20,
				start:'2018-02-01',
				end:'2018-02-28',
				type:'stone',
				progress:20,
			},
		],
	},
];

dataset = new Sigma.Gantt.DataCollection(data, 'chart');

Sigma.Assert.eq(
	new Sigma.Date('2018-01-23').toString(),
	obj.getChartStart(dataset).toString(),
	"startDate"
);

obj._chartStart = null;
obj._chartEnd = null;
obj._chartMaxEnd = null;
obj.startDate = null;
Sigma.Assert.eq(
	new Sigma.Date('2018-02-01').toString(),
	obj.getChartStart(dataset).toString(),
	"startDate in null. get DataCollection"
);


console.log('===endDate');

obj._chartStart = null;
obj._chartEnd = null;
obj._chartMaxEnd = null;
Sigma.Assert.eq(
	new Sigma.Date('2018-03-23').toString(),
	obj.getChartEnd(dataset).toString(),
	"endDate "
);

obj._chartStart = null;
obj._chartEnd = null;
obj._chartMaxEnd = null;
obj.endDate = null;
Sigma.Assert.eq(
	new Sigma.Date('2018-02-28').toString(),
	obj.getChartEnd(dataset).toString(),
	"endDate in null. get DataCollection. type day"
);


console.log('===maxEndDate');

obj._chartStart = null;
obj._chartEnd = null;
obj._chartMaxEnd = null;
obj.type = 'day';
obj.startDate = Sigma.Date('2018-02-01');
Sigma.Assert.eq(
	new Sigma.Date('2018-03-02').toString(),
	obj.getMaxChartEnd(dataset).toString(),
	"maxEndDate type day"
);

obj._chartStart = null;
obj._chartEnd = null;
obj._chartMaxEnd = null;
obj.type = 'week';
Sigma.Assert.eq(
	new Sigma.Date('2018-08-23').toString(),
	obj.getMaxChartEnd(dataset).toString(),
	"maxEndDate type week"
);

obj._chartStart = null;
obj._chartEnd = null;
obj._chartMaxEnd = null;
obj.type = 'month';
obj.startDate = Sigma.Date('2018-02-01');
Sigma.Assert.eq(
	new Sigma.Date('2020-07-01').toString(),
	obj.getMaxChartEnd(dataset).toString(),
	"maxEndDate type day"
);


console.log('===maxEndDate compare chartEnd');

obj._chartStart = null;
obj._chartEnd = null;
obj._chartMaxEnd = null;
obj.type = 'day';
obj.endDate = Sigma.Date('2018-02-11');
Sigma.Assert.eq(
	new Sigma.Date('2018-02-11').toString(),
	obj.getChartEnd(dataset).toString(),
	"maxEndDate compare chartEnd"
);


console.log('===column count');

obj.startDate = null;
obj.endDate = null;
obj._chartStart = null;
obj._chartEnd = null;
obj.type = 'day';
obj.maxColumnCount = 20;
Sigma.Assert.eq(
	20,
	obj.getColumnCount(),
	"maxColumnCount start=null end=null"
);

obj.startDate = new Sigma.Date('2018-01-11');
obj.endDate = new Sigma.Date('2018-02-11');
Sigma.Assert.eq(
	32,
	obj.getColumnCount(),
	"maxColumnCount start!=null end!=null"
);

obj._chartStart = new Sigma.Date('2018-01-11');
obj._chartEnd = new Sigma.Date('2018-01-21');
Sigma.Assert.eq(
	11,
	obj.getColumnCount(),
	"maxColumnCount maxStart!=null maxEnd!=null"
);







</script>

</body>
</html>
