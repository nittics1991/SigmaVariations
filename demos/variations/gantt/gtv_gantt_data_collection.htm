<!DOCTYPE html>
<html lang="ja">
<head>
    <meta http-equiv="Content-type" content="text/html; charset=UTF-8" />
	
	<!--moment-->
    <script type="text/javascript" src="../../../grid/moment/moment-with-locales.js"></script>
	
	<!--sigma variations/lib-->
    <script type="text/javascript" src="../../../src/lib/gtv_assert.js"></script>
    <script type="text/javascript" src="../../../src/lib/gtv_date.js"></script>
	
	<!--sigma variations/gantt/exception-->
    <script type="text/javascript" src="../../../src/gantt/exception/gtv_gantt_error_invalidargument.js"></script>
	
	<!--sigma variations/gantt-->
    <script type="text/javascript" src="../../../src/gantt/gtv_gantt_chart.js"></script>
    <script type="text/javascript" src="../../../src/gantt/gtv_gantt_data.js"></script>
    <script type="text/javascript" src="../../../src/gantt/gtv_gantt_data_collection.js"></script>
	
	<!--sigma-->
	<script type="text/javascript" src="../../../src/gt_const.js"></script>
	<script type="text/javascript" src="../../../src/gt_base.js"></script>
	<script type="text/javascript" src="../../../src/gt_tool.js"></script>
	<script type="text/javascript" src="../../../src/gt_editor.js"></script>
	<script type="text/javascript" src="../../../src/gt_dialog.js"></script>
	<script type="text/javascript" src="../../../src/gt_grid.js"></script>
	<script type="text/javascript" src="../../../src/gt_ajax.js"></script>
	<script type="text/javascript" src="../../../src/gt_column.js"></script>
	<script type="text/javascript" src="../../../src/gt_dataset.js"></script>
	<script type="text/javascript" src="../../../src/gt_template.js"></script>
	<script type="text/javascript" src="../../../src/gt_validator.js"></script>	
 	
<title></title>
</head>
<body>

<h4>テスト</h4>
<ol>
	<li>consoleでassert確認</li>
</ol>

<div id="mocha"></div>

<script>

var obj;
var expect;

var data = [
	{
		no:1,
		user:'yamada',
		section:'design-1',
		startDay:'2018-01-23',
		endDay:'2018-02-01',
		task:'model design',
		chart:[
			{
				id:10,
				start:'2018-02-05',
				end:'2018-02-28',
				type:'bar',
				progress:50,
				format:'YYYY-MM-DD',
			},
			{
				id:101,
				start:'2018-02-01',
				end:'2018-02-10',
				type:'stone',
				progress:100,
				//format:'YYYY-MM-DD',
				text:'TITLE',
				className:'my-class',
				textColor:'#ff0000',
				borderColor:'#00FF00',
				backgroundColor:'#1290aA',
				progressColor:'#0000FF',
			},
		],
	},	
	{
		no:2,
		user:'okada',
		section:'design-2',
		startDay:'2018-02-01',
		endDay:'2018-02-28',
		task:'view design',
		chart:[
			{
				id:20,
				start:'{startDay}',
				end:'{endDay}',
				type:'stone',
				progress:20,
			},
		],
	},
];

console.log("===test");

obj = new Sigma.Gantt.DataCollection(data, 'chart');

exception = [
	{
		no:1,
		user:'yamada',
		section:'design-1',
		startDay:'2018-01-23',
		endDay:'2018-02-01',
		task:'model design',
		chart:[
			{
				id:10,
				start:'2018-02-05',
				end:'2018-02-28',
				type:'bar',
				progress:50,
				format:'YYYY-MM-DD',
				text:null,
				className:null,
				textColor:null,
				borderColor:null,
				backgroundColor:null,
				progressColor:null,
				pline:{}
			},
			{
				id:101,
				start:'2018-02-01',
				end:'2018-02-10',
				type:'stone',
				progress:100,
				format:'YYYY-MM-DD',
				text:'TITLE',
				className:'my-class',
				textColor:'#ff0000',
				borderColor:'#00FF00',
				backgroundColor:'#1290aA',
				progressColor:'#0000FF',
				pline:{}
			},
		],
	},	
	{
		no:2,
		user:'okada',
		section:'design-2',
		startDay:'2018-02-01',
		endDay:'2018-02-28',
		task:'view design',
		chart:[
			{
				id:20,
				start:'2018-02-01',
				end:'2018-02-28',
				type:'stone',
				progress:20,
				format:'YYYY-MM-DD',
				text:null,
				className:null,
				textColor:null,
				borderColor:null,
				backgroundColor:null,
				progressColor:null,
				pline:{}
			},
		],
	},
];

Sigma.Assert.eqObj(
	exception,
	obj.toArray(),
	"toArray"
);

Sigma.Assert.eq(
	new Sigma.Date('2018-02-01').valueOf,
	obj.getMinStart().valueOf,
	"getMinStart"
);
Sigma.Assert.eq(
	new Sigma.Date('2018-02-28').valueOf,
	obj.getMaxEnd().valueOf,
	"getMaxEnd"
);


console.log("===calPosition");

chartOption = {
	type:'day',
	startDate:'2018-01-23',
	endDate:'2018-03-23',
	headerFormatDay:'YYYY/MM/DD',
	headerFormatWeek:'YYYY/MM/B',
	headerFormatMonth:'YYYY/MM',
	maxColumnCount:30,
};

chart = new Sigma.Gantt.Chart(chartOption);
var d1, d2;

d1 = Sigma.Date('2018-01-14').valueOf();
d2 = Sigma.Date('2018-01-23').valueOf();
Sigma.Assert.eq(
	9,
	obj._calPositionDay(d1, d2),
	"calPosition day"
);

chart.type = 'week';
d1 = Sigma.Date('2018-02-02').valueOf();
d2 = Sigma.Date('2018-03-22').valueOf();
Sigma.Assert.eq(
	7,
	obj._calPositionWeek(d1, d2),
	"calPosition week"
);

chart.type = 'month';
d1 = Sigma.Date('2018-02-02').valueOf();
d2 = Sigma.Date('2018-11-22').valueOf();
Sigma.Assert.eq(
	9,
	obj._calPositionMonth(d1, d2),
	"calPosition month"
);


console.log("===buildDataset");

obj = new Sigma.Gantt.DataCollection(data, 'chart');

chart.type = 'day';
obj.buildDataset(chart);

Sigma.Assert.eq(
	101,
	obj.buildedDataset[0]['chart_9'][0]['id'],
	"buildDataset day"
);

console.log('---view sigma object');
console.log(obj.toSigmaObject());

</script>

</body>
</html>
